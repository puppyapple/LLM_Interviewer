RESUME_ANALYSIS_SYSTEM_PROMPT = "你是一个专业的简历分析助手。"

INTERVIEW_SYSTEM_PROMPT = "你是一个专业的面试官。"

RESUME_PROJECT_EXTRACTION_PROMPT = """
请仔细阅读以下简历文本,并按照以下步骤提取和整合相关信息:

1. 识别所有的工作经历和项目经历。

2. 分析每段项目经历和工作经历之间的关联性,将相关的项目经历描述整合工作经历一起。

3. 为每个整合后的经历创建一个文本块,包含以下信息:
   - 时间段
   - 公司/组织名称(如适用)
   - 职位/角色(如适用)
   - 主要职责和成就
   - 相关的项目详情(如适用)
   - 使用的技能和工具

4. 按时间顺序排列这些文本块,最近的经历放在前面。

5. 确保每个文本块的信息完整、连贯,并突出显示候选人的主要成就和技能。

6. 如果某些项目经历与特定的工作经历没有明确关联,可以单独列出。

请以清晰、结构化的方式呈现这些文本块,使其易于阅读和理解。
每个文本块应该是一个独立的段落,包含该经历的所有相关信息。

简历文本：
{resume_text}

每个项目请严格按照上面的关键信息返回结果，不要有多余的输出，也不要有任何遗漏；
如果项目中没有使用到上面的关键信息，请留空。
"""

KEY_POINTS_EXTRACTION_PROMPT = """
请仔细阅读以下项目描述,并按照以下要求提取关键技术概念:

1. 识别项目中涉及的具体技术概念、工具、框架或方法论。
2. 为每个识别出的技术概念提供一个简洁的描述(不超过15个字)。
3. 关注那些对项目成功至关重要或体现技术难度的概念。
4. 尽量避免过于宽泛或通用的概念。

项目描述:
{project}

请列出2-3个关键技术概念,每个概念占一行,格式如下:
技术概念: 简洁描述

示例:
Docker: 容器化部署工具
TensorFlow: 深度学习框架
CI/CD: 持续集成和部署
"""

PROJECT_QUESTION_GENERATION_PROMPT = """
基于以下项目描述，生成2-3个针对性强的面试问题。这些问题应该能够深入考察候选人在项目中的实际贡献、技术理解和解决问题的能力。

项目描述:
{project}

生成的问题应该:
1. 直接关联项目中使用的技术或解决的问题
2. 要求候选人解释具体的技术选择或实现细节
3. 探讨候选人在项目中遇到的挑战及其解决方案
4. 评估候选人对相关技术领域的深入理解

请列出生成的问题,每个问题占一行。

"""

KEYPOINT_QUESTION_GENERATION_PROMPT = """
基于以下关键技术概念和检索到的相关知识点,生成1-2个针对性强的面试问题。
这些问题应该深入考察候选人对关键技术概念的理解,并且必须基于检索到的相关知识内容。

关键技术概念:
{keypoint}

检索到的相关知识:
{relevant_knowledge}

生成的问题应该:
1. 直接关联关键技术概念,并利用检索到的知识点
2. 要求候选人解释具体的概念原理、实现细节或应用场景
3. 探讨候选人对概念的深入理解,包括优缺点、最佳实践或常见问题
4. 可以包含实际应用案例或特定场景下的问题解决

请列出生成的问题,每个问题占一行。确保每个问题都紧密结合检索到的相关知识,体现出对技术细节的深入询问。

示例:
关键技术概念: Docker容器化
检索到的相关知识: Docker使用轻量级的容器来运行应用,具有快速部署、资源隔离、版本控制等优势。Docker镜像采用分层存储技术,可以共享基础层,节省存储空间。

生成的问题:
1. 请解释Docker的分层存储技术是如何工作的,它如何帮助优化存储空间使用?
2. 在使用Docker进行微服务部署时,您如何处理服务之间的网络通信和数据持久化问题?
3. Docker容器与传统虚拟机相比,在资源利用率和性能方面有什么优势?请举例说明。
"""
